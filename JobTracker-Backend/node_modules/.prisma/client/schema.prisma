// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  password       String
  firstName      String
  lastName       String
  phone          String?
  location       String?
  profilePicture String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relationships
  jobs    Job[]
  resumes Resume[]

  @@map("users")
}

model Job {
  id              Int       @id @default(autoincrement())
  userId          Int
  resumeId        Int? // Optional reference to resume used for this application
  company         String
  position        String
  location        String?
  jobType         String?
  experienceLevel String? // Experience level: Student, Internship, Junior, Associate, Mid-Senior, Senior, Lead, Manager, Director
  remote          String? // Work arrangement: Remote, Hybrid, On-site
  salary          String?
  description     String?
  requirements    String?
  additionalInfo  String?
  applicationUrl  String?
  status          String?
  priority        String    @default("medium")
  notes           String?
  appliedAt       DateTime?
  interviewDate   DateTime?
  followUpDate    DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  // Relationships
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  resume Resume? @relation(fields: [resumeId], references: [id], onDelete: SetNull)

  @@map("jobs")
}

model Resume {
  id            Int      @id @default(autoincrement())
  userId        Int
  title         String
  originalName  String
  fileName      String
  s3Url         String?
  fileSize      Int
  mimeType      String
  resumeType    String   @default("general")
  description   String?
  isActive      Boolean  @default(true)
  downloadCount Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relationships
  user User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  jobs Job[] // Jobs that used this resume

  @@map("resumes")
}
